import Frame from "./frame.js"
import TileSet from "./tileset.js"

export default class TileSet_Player extends TileSet{

    constructor(columns, tile_size){

        super(columns, tile_size)



        let f = Frame;

        /* An array of all the frames in the tile sheet image. */
        this.frames = [ 
            new f(1,  1, 70, 70, 0, -5), new f(73,  1, 70, 70, 0, -5), new f(145,  1, 70, 70, 0, -5), new f(217,  1, 70, 70, 0, -5), new f(289,  1, 70, 70, 0, -5), new f(361,  1, 70, 70, 0, -5), new f(361+72,  1, 70, 70, 0, -5), new f(505,  1, 70, 70, 0, -5), new f(577,  1, 70, 70, 0, -5),  
            new f(1,  73, 70, 70, 0, -5), new f(73,  73, 70, 70, 0, -5), new f(145,  73, 70, 70, 0, -5), new f(217,  73, 70, 70, 0, -5), new f(289,  73, 70, 70, 0, -5), new f(361,  73, 70, 70, 0, -5), new f(361+72,  73, 70, 70, 0, -5), new f(505,  73, 70, 70, 0, -5), 
            new f(1,  145, 70, 70, 0, 0), new f(73,  145, 70, 70, 0, 0), new f(145,  145, 70, 70, 0, 0), new f(217,  145, 70, 70, 0, 0), new f(289,  145, 70, 70, 0, 0), new f(361,  145, 70, 70, 0, 0), new f(361+72,  145, 70, 70, 0, 0), new f(505,  145, 70, 70, 0, 0), 
            new f(1,  217, 70, 70, 0, 0), new f(73,  217, 70, 70, 0, 0), new f(145,  217, 70, 70, 0, 0), new f(217,  217, 70, 70, 0, 0),
            new f(1,  289, 70, 70, 0, -5), new f(73,  289, 70, 70, 0, -5), new f(145,  289, 70, 70, 0, -5), new f(217,  289, 70, 70, 0, -5), new f(289,  289, 70, 70, 0, -5), new f(361,  289, 70, 70, 0, -5), new f(361+72,  289, 70, 70, 0, -5), new f(505,  289, 70, 70, 0, -5), new f(577,  289, 70, 70, 0, -5),  
            new f(1,  361, 70, 70, 0, -5),
            new f(1,  433, 70, 70, 0, -5), new f(73,  433, 70, 70, 0, -5), new f(145,  433, 70, 70, 0, -5), new f(217,  433, 70, 70, 0, -5), new f(289,  433, 70, 70, 0, -5), new f(361,  433, 70, 70, 0, -5), new f(361+72,  433, 70, 70, 0, -5), new f(505,  433, 70, 70, 0, -5), new f(577,  433, 70, 70, 0, -5),  
            new f(1,  505, 70, 70, 0, -5), new f(73,  505, 70, 70, 0, -5), new f(145,  505, 70, 70, 0, -5), new f(217,  505, 70, 70, 0, -5), new f(289,  505, 70, 70, 0, -5), new f(361,  505, 70, 70, 0, -5), new f(361+72,  505, 70, 70, 0, -5), new f(505,  505, 70, 70, 0, -5), 
            new f(1,  577, 70, 70, 0, 0), new f(73,  577, 70, 70, 0, 0), new f(145,  577, 70, 70, 0, 0), new f(217,  577, 70, 70, 0, 0), new f(289,  577, 70, 70, 0, 0), new f(361,  577, 70, 70, 0, 0), new f(361+72,  577, 70, 70, 0, 0), new f(505,  577, 70, 70, 0, 0), 
            new f(1,  649, 70, 70, 0, 0), new f(73,  649, 70, 70, 0, 0), new f(145,  649, 70, 70, 0, 0), new f(217,  649, 70, 70, 0, 0),
            new f(1,  721, 70, 70, 0, -5), new f(73,  721, 70, 70, 0, -5), new f(145,  721, 70, 70, 0, -5), new f(217,  721, 70, 70, 0, -5), new f(289,  721, 70, 70, 0, -5), new f(361,  721, 70, 70, 0, -5), new f(361+72,  721, 70, 70, 0, -5), new f(505,  721, 70, 70, 0, -5), new f(577,  721, 70, 70, 0, -5),  
            new f(1,  793, 70, 70, 0, -5),
        ];
    }
}

